"""
конструктор класса

def __init__(self)

модификаторы доступа

публичный - к этому методу есть доступ откуда угодно
защищенный - _ - можно использовать только внутри пакета
приватный - __ - только внутри класса

--------------инкапсуляция---------------------
механизм сокрытия доступа

--------------наследование---------------------
получение методово и атрибутов от родительского класса дочерним
множественное
несколько дочерних классов у одного родительского
несколько родительских классов у одного дочернего

--------------полиморфизм-----------------------
возможность классов и экземпляров этого класса иметь одинаковые названия методов, но реализующих разный функционал

- перегрузка метода - возможность разной логики выполнения в зависимости от количества и типа передаваемых параметров

- переопределение методов - выражается в наличии метода с одинаковыми методами для родительского и дочернего классов

"""




class Book:
    count = 0

    def __init__(self, title, author, published=2000):
        self.title = title
        self.author = author
        self.published = published
        Book.count += 1

    def get_full_name_info(self):
        return f"{self.title} - {self.author} - {self.published}"


print(Book.count)
my_book = Book("Gore ot uma", "Griboedov")
print(Book.count)
print(my_book.title)
print(my_book.get_full_name_info())

#  Наследование


class DetectiveBook(Book):
    pass


my_detective_book = DetectiveBook("9 Niggers", "Agata Kristi")
print(my_detective_book.get_full_name_info())

