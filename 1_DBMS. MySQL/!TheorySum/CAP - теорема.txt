В NoSQL БД идёт отказ от некоторых из правил ACID. Как только БД становится распределенной выполнять их становится часто невозможно 

- проблема масштабирования БД (невозможно постоянно масштабировать по вертикали)
- транзакции приводят к блокировке части данных из-за которых они становятся недоступными для некоторых клиентов
- при высоких нагрузках этом может стать неприемлемым из-за больших очередей запросов пользователей
- как только БД становится распределенной нам необходимо обеспечивать её устойчивость к сетевым сбоям
- противоречия обеспечения согласованности и распределенности часто описывается CAP - теоремой
- к большой распределенной системе предъявляются три взаимосвязанных требования: 
	- согласованность означает, что все клиенты должны получить один и тот же ответ на один запрос, даже если в данный момент производится запись в БД (Consistency)
	- доступность - все клиенты БД имеют возможность всегда читать и записывать данные (Availability)
	- устойчивость к разделению - БД можно разделить между несколькими машинами, она продолжит работу даже при отказе сегмента сети. (Partition Tolerance)
	
CAP теорема утверждает, что в распределенной системе можно обеспечить одновременное выполнение только двух из этих трёх требований.

Традиционные RDB обеспечивают AC
Redis, MongoDB - CP
Cassandra, Riak - AP

