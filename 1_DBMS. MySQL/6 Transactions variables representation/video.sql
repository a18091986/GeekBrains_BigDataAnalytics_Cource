----------------------TRANSACTIONS-------------------------


-- commit, rollback

-- троанзакция - атомарная группа запросов sql, рассматриваемая как единое целое. если не может быть выполнен один из запросов группы,
-- то не будет выполнен ни один из них

-- start transaction -> commit; start transaction -> rollback;

-- необрамтимые команды для которых нельзя выполнить rollback: create index, drop index, create drop truncate alter rename table, 
-- create drop alter database

-- команды неявно завершающие транзакцию: begin, load master data, lock tables, rename, set autocommit, start TRANSACTION, create index
-- alter create drop truncate table, create drop database

-- savepoint - место в последовательности команд транзакции, которое может выступать в качестве промежуточной точки восстановления 
-- rollback to savepoint


-- транзакций недостаточно, если они не удовлетворяют принципам ACID - atomicy consistency isolation durability
-- atomicy - атомарность - подразумевает, что транзакция должна функционировать как единая неделимая единица или выполниться полностью или отмениться
-- consistency - согласованность - БД должна приходить из одного непротиворечивого состояния в другое непротиворечивое состояние
-- isolation - изолоированность - промежуточные шаги транзакции не видны другим транзакциям
-- durability - изменения внесенные в результате транзакции будучи зафикисированным становятся постоянными 

-- УРОВНИ ИЗОЛЯЦИИ (от самого слабого к самому сильному, более низкие уровни изоляции требуют меньше накладных расходов и обеспечивают больший совместный доступ)

-- read uncommitted - транзакции могут видеть результаты незавешенных транзакций
-- read committed - транзакция увидит изменения других транзакций, завершенных к моменту её начала. Феномен невопроизводимого чтения. 
-- можем выполнить одну и ту же команду дважды и получить разные результаты
-- repeatable read - гарантирует, что любые строки считанные в пределах транзакции, будут выглядеть одинаково. Феномен фантомного чтения - 
-- выбор строк может вернуть разное количество строк, если в процессе выполнения транзакции другая транзакция вставила новую строку
-- serializable - заставляет выполняться транзакции в таком порядке, чтобы исключить возможность конфликта

 ------------------------------------VARIABLES--------------------------------------
переменные живут только во время текущей сессии
имена переменных нечувствительны к регистру

@var := 
SET @select = ......
select @total := count(*) from products;
set не вохвращает результирующую таблицу  

--------------------------------------TEMP TABLES------------------------------------

create temporary table .....


-------------------------------------Динамические запросы-------------------------------
временные запросы, которые можно сохранять под определенным именем на время жизни сессии
динамические запросы могут иметь параметры, передаваемые в запрос при его вызове


prepare ver ....
execute ver;


-----------------------------------Представления----------------------------------------

представления - споособ организации данных, это запрос на выборку, которому присваеивается имя и который можно сохранять или удалять из БД 
create or replace view as select * from table order by name; 
представление рассматривается как полноценная таблица и представлено в списке таблиц
 


-------------------------------Хранимые процедуры и функции------------------------------------
позволяют создавать последовательность sql команд и вызывать их по имени функции или процедуры

create procedure name
create function name

функция возвращает значение и её можнео встраивать в sql запросы, в то время как процедура вызывается явно отдельной командой call. 



