from Practice.utils import my_print



# ----------------------------------------------------------------------------------------------------------------
task = "Даны значения величины заработной платы заемщиков банка (zp) \n" \
       "и значения их поведенческого кредитного скоринга (ks): \n" \
       "zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110], \n" \
       "ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]. \n" \
       "Используя математические операции, посчитать коэффициенты линейной регрессии, \n" \
       "приняв за X заработную плату (то есть, zp - признак), \n" \
       "а за y - значения скорингового балла (то есть, ks - целевая переменная). \n" \
       "Произвести расчет как с использованием intercept, так и без."

my_print(msg=task, separator_before=True, separator_after=False, color='зеленый')


# ----------------------------------------------------------------------------------------------------------------
task = "Посчитать коэффициент линейной регрессии при заработной плате (zp), \n" \
       "используя градиентный спуск (без intercept).\n" \
       "Произвести расчет как с использованием intercept, так и без."

my_print(msg=task, separator_before=True, separator_after=False, color='зеленый')


# ----------------------------------------------------------------------------------------------------------------
task = "В каких случаях для вычисления доверительных интервалов и проверки статистических гипотез \n" \
       "используется таблица значений функции Лапласа, а в каких - таблица критических точек распределения Стьюдента?\n" \

my_print(msg=task, separator_before=True, separator_after=False, color='зеленый')


# ----------------------------------------------------------------------------------------------------------------
task = "Произвести вычисления как в пункте 2, но с вычислением intercept. \n" \
       "Учесть, что изменение коэффициентов должно производиться на каждом шаге одновременно \n" \
       "(то есть изменение одного коэффициента не должно влиять на изменение другого во время одной итерации)."

my_print(msg=task, separator_before=True, separator_after=False, color='зеленый')

